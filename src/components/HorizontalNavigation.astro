---
type Props = {
    city: string;
    currentPath?: string;
};

const { city, currentPath = "/" } = Astro.props;

let paths: { [key: string]: string } = {
    wetter: "Wetter",
    regen: "Regen",
    gewitter: "Gewitter",
    wind: "Wind",
    uv: "UV-Index",
};
---

<div class="navigation-container">
    <div class="back-link-container">
        <a href=`/${currentPath}/` class="back-link">← Zur Städteliste</a>
    </div>
    
    <!-- Desktop Navigation -->
    <nav class="desktop-nav">
        <div class="tabs-wrapper">
            {
                Object.keys(paths).map((path: string) => {
                    const label = paths[path];
                    return (
                        <a
                            href={`/${path}/${city}/`}
                            class={`tab ${currentPath === path ? "active" : ""}`}
                            aria-current={currentPath === path ? "page" : undefined}
                        >
                            {label}
                        </a>
                    );
                })
            }
        </div>
    </nav>
    
    <!-- Mobile Navigation -->
    <div class="mobile-nav-container">
        <nav class="mobile-nav">
            <div class="mobile-tabs">
                {
                    Object.keys(paths).map((path: string) => {
                        const label = paths[path];
                        return (
                            <a
                                href={`/${path}/${city}/`}
                                class={`mobile-tab ${currentPath === path ? "active" : ""}`}
                                aria-current={currentPath === path ? "page" : undefined}
                            >
                                <span class="mobile-tab-text">{label}</span>
                            </a>
                        );
                    })
                }
            </div>
        </nav>
    </div>
</div>

<style>
    .navigation-container {
        margin: 0.5rem 0 1.5rem;
    }
    
    .back-link-container {
        margin: 0 1rem 1rem;
    }
    
    .back-link {
        color: #000;
        text-decoration: none;
        font-size: 0.95rem;
        display: inline-flex;
        align-items: center;
        transition: opacity 0.2s;
    }
    
    .back-link:hover {
        opacity: 0.8;
        text-decoration: none;
    }
    
    /* Desktop Navigation */
    .desktop-nav {
        width: 100%;
        margin-bottom: 1rem;
        display: none;
    }
    
    .tabs-wrapper {
        display: flex;
        justify-content: center;
        border-bottom: 1px solid #e2e8f0;
        padding: 0 1rem;
    }
    
    .tab {
        padding: 0.75rem 1.5rem;
        color: #6b7280;
        text-decoration: none;
        white-space: nowrap;
        border-bottom: 2px solid transparent;
        font-size: 1.05rem;
        transition: all 0.2s ease;
    }
    
    .tab:hover {
        color: #1e3a8a;
        text-decoration: none;
    }
    
    .tab.active {
        color: #1e3a8a;
        border-bottom-color: #1e3a8a;
        font-weight: 600;
    }
    
    /* Mobile Navigation */
    .mobile-nav-container {
        width: 100%;
        overflow-x: auto;
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE and Edge */
    }
    
    .mobile-nav-container::-webkit-scrollbar {
        display: none;
    }
    
    .mobile-nav {
        width: 100%;
        margin-bottom: 1rem;
    }
    
    .mobile-tabs {
        display: flex;
        border-bottom: 1px solid #e2e8f0;
        padding: 0 0.5rem;
    }
    
    .mobile-tab {
        flex: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 0.75rem 0.25rem;
        color: #6b7280;
        text-decoration: none;
        text-align: center;
        font-size: 0.9rem;
        transition: all 0.15s ease;
        min-width: 60px;
        position: relative;
    }
    
    .mobile-tab.active {
        color: #1e3a8a;
        font-weight: 600;
    }
    
    .mobile-tab.active::after {
        content: '';
        position: absolute;
        bottom: -1px;
        left: 25%;
        width: 50%;
        height: 3px;
        background-color: #1e3a8a;
        border-radius: 3px 3px 0 0;
    }
    
    .mobile-tab-text {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 100%;
    }
    
    /* Responsive Breakpoints */
    @media (max-width: 767px) {
        .desktop-nav {
            display: none;
        }
        
        .mobile-nav-container {
            display: block;
        }
    }
    
    @media (min-width: 768px) {
        .desktop-nav {
            display: block;
        }
        
        .mobile-nav-container {
            display: none;
        }
    }
    
    @media (min-width: 1024px) {
        .tab {
            padding: 0.75rem 2rem;
        }
    }
</style>
