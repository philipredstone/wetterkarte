---
import { getCollection } from 'astro:content';
import { filterPublishedPosts, sortPostsByDate } from '../../utils/posts';
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths({ paginate }: any) {
  const posts = await getCollection('blog');
  const publishedPosts = filterPublishedPosts(posts);
  const sortedPosts = sortPostsByDate(publishedPosts);

  return paginate(sortedPosts, { pageSize: 10 });
}

const { page }: any = Astro.props;
const title = "Blog | wetterkarte.org";
const description =
    "Kostenlose Wetterkarte Deutschland mit Echtzeit-Regenradar ✓ Stündliche Temperatur- & Windvorhersage ✓ 48h Wetterprognose ✓ Präzise & aktuell";



---

<Layout title={title} description={description}>
  <Header currentPath="/blog/"/>

  <main>
    <section class="content-section">
      <article>
        <header>
          <h1>Blog Posts</h1>
        </header>

        {page.data.map((post: any) => (
          <a href={`/blog/${post.slug}/`} class="card">
            {post.data.image && (
              <img
                src={post.data.image}
                alt={post.data.title}
                class="card-image"
              />
            )}
            <div class="card-content">
              <h2 class="card-title">{post.data.title}</h2>
              <time class="card-date" datetime={post.data.date}>
                {new Date(post.data.date).toLocaleDateString("de-DE", {
  day: "2-digit",
  month: "short",
  year: "numeric",
})}
              </time>
              <p class="card-description">{post.data.description}</p>
              {post.data.tags && (
                <ul class="card-tags">
                  {post.data.tags.map((tag: string) => (
                    <li>#{tag}</li>
                  ))}
                </ul>
              )}
            </div>
          </a>
        ))}
      </article>
    </section>
  </main>

  <Footer />
</Layout>

<style>
  .content-section {
    padding: 2rem 1.5rem;
    max-width: 900px;
    margin: 0 auto;
    min-height: 85vh;
  }

  .content-section h1 {
    font-size: 2rem;
    margin-bottom: 1rem;
    font-weight: 700;
  }

  .content-section p {
    margin-bottom: 1rem;
    line-height: 1.8;
  }


  a[target="_blank"]::after {
    content: " ↪";
    font-size: 0.8em;
    margin-left: 0.2em;
    vertical-align: text-top;
  }

  /* Card Styles */
  .card {
    display: flex;
    flex-direction: column;
    text-decoration: none;
    color: inherit;
    background: #fff;
    border: 1px solid #eee;
    border-radius: 8px;
    overflow: hidden;
    margin-bottom: 1.5rem;
    transition: box-shadow 0.2s ease-in-out;
  }

  .card:hover {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }

  .card-image {
    width: 100%;
    height: 180px;
    object-fit: cover;
  }

  .card-content {
    padding: 1rem;
  }

  .card-title {
    font-size: 1.5rem;
    margin: 0 0 0.5rem;
  }

  .card-date {
    font-size: 0.9rem;
    color: #666;
    margin-bottom: 0.5rem;
  }

  .card-description {
    font-size: 1rem;
    margin-bottom: 0.5rem;
  }

  /* Improved Tag Styles */
  .card-tags {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem; 
  }

  
  .card-tags::marker {
    content: "";
  }

  .card-tags li {
    background-color: #ffffff;
    color: #333;
    border: 1px solid #d8d8d8;
    border-radius: 8px;
    padding: 0.3rem 0.8rem;
    font-size: 0.8rem;
    margin: 0;
  }
</style>
